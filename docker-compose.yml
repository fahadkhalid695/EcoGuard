# Docker Compose file for EcoGuard Pro
# Note: version field is deprecated in newer Docker Compose versions

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecoguard-postgres
    environment:
      POSTGRES_DB: ecoguard_pro
      POSTGRES_USER: ecoguard
      POSTGRES_PASSWORD: ecoguard123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecoguard-network

  # MQTT Broker (Eclipse Mosquitto)
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: ecoguard-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
    networks:
      - ecoguard-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ecoguard-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ecoguard_pro
      DB_USER: ecoguard
      DB_PASSWORD: ecoguard123
      JWT_SECRET: your-super-secret-jwt-key-here
      MQTT_BROKER_HOST: mqtt
      MQTT_BROKER_PORT: 1883
      WEBSOCKET_PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - mqtt
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - ecoguard-network

  # Frontend (Nginx serving built React app)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: ecoguard-frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - ecoguard-network

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: ecoguard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecoguard-network

volumes:
  postgres_data:
  redis_data:

networks:
  ecoguard-network:
    driver: bridge