# Build stage
FROM node:18-alpine as build

WORKDIR /app

# Copy Docker environment file first
COPY .env.docker .env

# Copy package files and npm config
COPY package*.json ./
COPY .npmrc ./

# Install dependencies with legacy peer deps
RUN npm install --legacy-peer-deps

# Copy source code
COPY . .

# Set build arguments
ARG VITE_API_URL=http://localhost:3001/api/v1
ARG VITE_WEBSOCKET_URL=ws://localhost:3001
ARG VITE_ENABLE_WEBSOCKETS=true
ARG VITE_DEMO_MODE=true

# Set environment variables for build
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_WEBSOCKET_URL=$VITE_WEBSOCKET_URL
ENV VITE_ENABLE_WEBSOCKETS=$VITE_ENABLE_WEBSOCKETS
ENV VITE_DEMO_MODE=$VITE_DEMO_MODE

# Debug: Show environment variables
RUN echo "Build environment:" && \
    echo "VITE_API_URL=$VITE_API_URL" && \
    echo "VITE_WEBSOCKET_URL=$VITE_WEBSOCKET_URL" && \
    echo "VITE_DEMO_MODE=$VITE_DEMO_MODE"

# Build the application with verbose output
RUN npm run build && \
    echo "Build completed. Contents of dist:" && \
    ls -la dist/ && \
    echo "Total files in dist:" && \
    find dist -type f | wc -l

# Production stage
FROM nginx:alpine

# Copy built files
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Expose port
EXPOSE 80 443

# Start nginx
CMD ["nginx", "-g", "daemon off;"]